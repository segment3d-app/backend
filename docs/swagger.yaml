basePath: /api
definitions:
  api.AssetResponse:
    properties:
      assetType:
        type: string
      assetUrl:
        type: string
      createdAt:
        type: string
      gaussianUrl:
        type: string
      id:
        type: string
      isPrivate:
        type: boolean
      likes:
        type: integer
      pointCloudUrl:
        type: string
      slug:
        type: string
      status:
        type: string
      thumbnailUrl:
        type: string
      title:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.CreateAssetRequest:
    properties:
      assetType:
        enum:
        - images
        - video
        type: string
      assetUrl:
        type: string
      isPrivate:
        type: boolean
      title:
        type: string
    required:
    - assetType
    - assetUrl
    - isPrivate
    - title
    type: object
  api.CreateAssetsResponse:
    properties:
      asset:
        $ref: '#/definitions/api.AssetResponse'
      message:
        type: string
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.UserResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      passwordChangedAt:
        type: string
      provider:
        type: string
      updatedAt:
        type: string
    type: object
  api.changeUserPasswordRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  api.changeUserPasswordResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.getAllAssetsResponse:
    properties:
      assets:
        items:
          $ref: '#/definitions/api.AssetResponse'
        type: array
      message:
        type: string
    type: object
  api.googleRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.loginUserResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.registerUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  api.registerUserResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.updateUserRequest:
    properties:
      avatar:
        type: string
      name:
        type: string
    type: object
  api.updateUserResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a documentation for Segment3d App API
  title: Segment3d App API Documentation
  version: "1.0"
paths:
  /assets:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all assets, including their associated user
        details.
      produces:
      - application/json
      responses:
        "200":
          description: 'Success: Returns all assets.'
          schema:
            $ref: '#/definitions/api.getAllAssetsResponse'
        "500":
          description: 'Error: Internal Server Error'
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get all assets
      tags:
      - assets
    post:
      consumes:
      - application/json
      description: Creates a new asset based on the title, privacy setting, asset
        URL, and asset type provided in the request.
      parameters:
      - description: Create Asset Request
        in: body
        name: CreateAssetRequest
        required: true
        schema:
          $ref: '#/definitions/api.CreateAssetRequest'
      produces:
      - application/json
      responses:
        "202":
          description: Asset creation successful, returns created asset details along
            with a success message.
          schema:
            $ref: '#/definitions/api.CreateAssetsResponse'
      summary: Create new asset
      tags:
      - assets
  /auth/google:
    post:
      consumes:
      - application/json
      description: Authenticate user with Google OAuth token
      parameters:
      - description: Google OAuth token
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.googleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User info from Google
          schema:
            additionalProperties: true
            type: object
      summary: Google Auth
      tags:
      - auth
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Login user with the provided credentials
      parameters:
      - description: User login details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User login successful
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: Login user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.registerUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registration successful
          schema:
            $ref: '#/definitions/api.registerUserResponse'
      summary: Register a new user
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Retrieve user information
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            $ref: '#/definitions/api.UserResponse'
      security:
      - BearerAuth: []
      summary: Get user data
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update user information based on the provided user ID
      parameters:
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User information updated successfully
          schema:
            $ref: '#/definitions/api.updateUserResponse'
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - users
  /users/password:
    patch:
      consumes:
      - application/json
      description: Change user password based on the provided user ID
      parameters:
      - description: User password update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.changeUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User password updated successfully
          schema:
            $ref: '#/definitions/api.changeUserPasswordResponse'
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
