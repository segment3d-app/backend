basePath: /api
definitions:
  api.loginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  api.loginUserResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.registerUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
      phone_number:
        maxLength: 12
        minLength: 10
        type: string
      username:
        type: string
    required:
    - email
    - password
    - phone_number
    - username
    type: object
  api.registerUserResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.updateUserRequest:
    properties:
      avatar:
        type: string
      email:
        type: string
      full_name:
        type: string
      phone_number:
        type: string
    type: object
  api.userResponse:
    properties:
      avatar:
        type: string
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      password_changed_at:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a documentation for Segment3d App API
  title: Segment3d App API Documentation
  version: "1.0"
paths:
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve user information based on the provided user ID
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            $ref: '#/definitions/api.userResponse'
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update user information based on the provided user ID
      parameters:
      - description: User ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User information updated successfully
          schema:
            $ref: '#/definitions/api.userResponse'
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user with the provided credentials
      parameters:
      - description: User login details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User login successful
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: Login user
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.registerUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registration successful
          schema:
            $ref: '#/definitions/api.registerUserResponse'
      summary: Register a new user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
