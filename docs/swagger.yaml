basePath: /api
definitions:
  api.UserResponse:
    properties:
      avatar:
        type: string
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      passwordChangedAt:
        type: string
      updatedAt:
        type: string
    type: object
  api.changeUserPasswordRequest:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  api.changeUserPasswordResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.loginUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  api.loginUserResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.registerUserRequest:
    properties:
      email:
        type: string
      password:
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  api.registerUserResponse:
    properties:
      accessToken:
        type: string
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
  api.updateUserRequest:
    properties:
      avatar:
        type: string
      name:
        type: string
    type: object
  api.updateUserResponse:
    properties:
      message:
        type: string
      user:
        $ref: '#/definitions/api.UserResponse'
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a documentation for Segment3d App API
  title: Segment3d App API Documentation
  version: "1.0"
paths:
  /auth/signin:
    post:
      consumes:
      - application/json
      description: Login user with the provided credentials
      parameters:
      - description: User login details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.loginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User login successful
          schema:
            $ref: '#/definitions/api.loginUserResponse'
      summary: Login user
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: Register a new user with the provided details
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.registerUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User registration successful
          schema:
            $ref: '#/definitions/api.registerUserResponse'
      summary: Register a new user
      tags:
      - auth
  /user:
    get:
      consumes:
      - application/json
      description: Retrieve user information
      produces:
      - application/json
      responses:
        "200":
          description: User information retrieved successfully
          schema:
            $ref: '#/definitions/api.UserResponse'
      security:
      - BearerAuth: []
      summary: Get user data
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update user information based on the provided user ID
      parameters:
      - description: User update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.updateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User information updated successfully
          schema:
            $ref: '#/definitions/api.updateUserResponse'
      security:
      - BearerAuth: []
      summary: Update user information
      tags:
      - user
  /user/password:
    patch:
      consumes:
      - application/json
      description: Change user password based on the provided user ID
      parameters:
      - description: User password update details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/api.changeUserPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User password updated successfully
          schema:
            $ref: '#/definitions/api.changeUserPasswordResponse'
      security:
      - BearerAuth: []
      summary: Change user password
      tags:
      - user
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
